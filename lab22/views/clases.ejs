<%- include('includes/head.ejs', {
    username: username,
    permisos: permisos,
}) %>
<!DOCTYPE html>
<html lang="es">
<head>
    <title>JOYERIA</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body class="bg-gray-100">
    <h1 class="text-center text-blue-900 italic text-3xl py-6 hover:text-red-500 hover:text-4xl">
        Joyas
    </h1>

    <!-- Inicio del bucle de filas -->
    <% Array.from({ length: Math.ceil(joyeria.length / 3) }, (_, i) => { %>
        <ul class="flex justify-center gap-8 my-12">
            <!-- Inicio del bucle de artículos por fila -->
            <% joyeria.slice(i * 3, (i + 1) * 3).forEach(item => { %>
                <li class="py-6 px-8 bg-white shadow-md">
                    <div class="text-center">
                        <p class="text-lg"><a href="/joya/<%= item.id %>" class="text-blue-500 hover:text-blue-700"><%= item.nombre %></a></p>
                        <img src="<%= item.imagen %>" alt="<%= item.nombre %>" class="mt-4 mx-auto w-48 h-48 object-cover rounded-full">
                        <p class="text-gray-700 mt-4"><%= item.descripcion %></p>
                        <p class="text-gray-700 mt-2"><%= item.precio %></p>
                        <button class="mt-4 bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded-full">Comprar</button>
                        
                        <!-- Verificación de permisos para editar joyas -->
                        <!-- <% for (let permiso of permisos) { %>
                            <% if(permiso.permiso == 'editar_joya') { %>
                                <a href="/joyas/editar/<%= item.id %>" class="mt-2 text-blue-500 hover:text-blue-700">Editar</a>
                            <% } %>
                        <% } %> -->
                    </div>
                </li>
            <% }); %>
            <!-- Fin del bucle de artículos por fila -->
        </ul>
    <% }); %>
    <!-- Fin del bucle de filas -->

    <% if(ultima_joya != '') { %> 
        <div>La joya creada fue <%= ultima_joya %>.</div>
    <% } %>

    <div class="flex flex-col w-1/3 mr-4 mb-4 bg-white rounded-xl justify-center items-center">
        <b><p class="text-2xl mt-4">
            Distribución de tipo
        </p></b>
        <div class="flex mb-4 rounded-xl h-full w-full justify-center items-center">
            <canvas id="pieChartTipo"></canvas>
        </div>
    </div>

    <canvas id="myChart"></canvas>

<div id="spotifyPlaylist">
    <script>
        
        const playlistId = '0KD1PuYLCtvAdTMVzDQYS4';
       
        const token = 'a998e1504f3a4160b863866e6559254b';

        fetch(`https://api.spotify.com/v1/playlists/${playlistId}`, {
          headers: {
            'Authorization': 'Bearer ${token}',
          }
        })
        .then(response => response.json())
        .then(data => {
          const playlist = data;
          const playlistEmbedUrl = `https://open.spotify.com/embed/playlist/${playlistId}`
          const iframe = document.createElement('iframe');
          iframe.src = playlistEmbedUrl;
          iframe.title = 'Spotify Embed: Recommendation Playlist';
          iframe.width = '100%';
          iframe.height = '100%';
          iframe.style.minHeight = '360px';
          iframe.frameBorder = '0';
          iframe.allow = 'autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture';
          iframe.loading = 'lazy';
    
          document.getElementById('spotifyPlaylist').appendChild(iframe);
        })
        .catch(error => console.error('Error:', error));

        function getRandomPastelColor() {
        let r, g, b;
        do {
            r = Math.floor(Math.random() * 128) + 128; // Valor entre 128 y 255 para tonos más claros
            g = Math.floor(Math.random() * 128) + 128; // Valor entre 128 y 255 para tonos más claros
            b = Math.floor(Math.random() * 128) + 128; // Valor entre 128 y 255 para tonos más claros
        } while (r === g && g === b); // Evitar colores grises
        return `rgb(${r}, ${g}, ${b})`;
    }


    //------------------------Código gráfica Tipo------------------------------------------//
    
    
    const datosTipo= <%- JSON.stringify(cantidadTipoJoya) %>[0];
    console.log(datosTipo); // Imprimir el primer objeto para ver qué propiedades tiene
    
    const tipo=[];
    const cantidad=[];
    
    // Iterar sobre cada objeto en el array
    datosTipo.forEach(dato => {
    // Obtener el nombre del tipo y el total
    const nombreTipo = dato.tipo; // Usar la propiedad 'tipo' en lugar de 'cantidadJoyas'
    const cantidadJoya = parseInt(dato.TotalTipo); // Usar la propiedad 'TotalTipo' en lugar de 'cantidadTipoJoya'

    // Agregar el nombre del tipo y el total a los arrays correspondientes
    tipo.push(nombreTipo);
    cantidad.push(cantidadJoya);
});
    
    console.log("tipo");
    console.log(tipo);
    console.log("cantidad");
    console.log(cantidad);
    
    const backgroundColorsTipo = tipo.map(() => getRandomPastelColor());

    const pieDataTipo = {
    labels: tipo, // Usar los nombres de los tipos como etiquetas
    datasets: [{
        label: '1',
        data: cantidad, // Aquí se asigna la cantidad en lugar de tipo
        backgroundColor: backgroundColorsTipo,
        hoverOffset: 4
    }]
};

// Obtener el contexto del canvas para la gráfica de donut
const pieCt = document.getElementById('pieChartTipo').getContext('2d');

let pieChartTipo = new Chart(pieCt, {
    type: 'doughnut',
    data: pieDataTipo,
    options: {
        responsive: false,
        plugins: {
            datalabels: {
                formatter: (value, ctx) => {
                    const total = ctx.chart.data.datasets[0].data.reduce((acc, curr) => acc + curr, 0);
                    const percentage = ((value / total) * 100).toFixed(2) + '%';
                    return percentage;
                },
                color: '#fff',
                font: {
                    weight: 'bold'
                }
            },
        },
        legend: {
            position: 'top',
        },
        title: {
            display: true,
            text: 'Gráfica de Pay Tipo'
        }
    }
});

    </script>
</div>

</body>
</html>