<%- include('includes/head.ejs', {
    username: username,
    permisos: permisos,
}) %>

<!DOCTYPE html>
<html>
<head>
    <title>Analítica</title>
    <!-- Incluye Chart.js desde un CDN -->
</head>
<body>
    <!-- Crea un elemento canvas en tu HTML donde se dibujará el gráfico -->

    <div class="flex flex-col w-1/3 mr-4 mb-4 bg-white rounded-xl justify-center items-center">
        <b><p class="text-2xl mt-4">
            Distribución de tipo
        </p></b>
        <div class="flex mb-4 rounded-xl h-full w-full justify-center items-center">
            <canvas id="pieChartTipo"></canvas>
        </div>
    </div>

    <canvas id="myChart"></canvas>

    <script>
        // Crea un nuevo gráfico de pastel
        const pieCt = document.getElementById('pieChartTipo').getContext('2d');
    
        const datosTipo= <%- JSON.stringify(cantidadJoyaTipo) %>[0];
        console.log(datosTipo);
    
        const tipo=[];
        const cantidad=[];
    
        // Iterar sobre cada objeto en el array
        datosTipo.forEach(dato => {
            // Obtener el nombre del tipo y el total
            const nombreTipo = dato.Tipo;
            const cantidadJoya = parseInt(dato.TotalLeads);
            
            // Agregar el nombre del tipo y el total a los arrays correspondientes
            tipo.push(nombreTipo);
            cantidad.push(cantidadJoya);
        });
        console.log(tipo);
        console.log(cantidad);
    
        const backgroundColorsTipo = tipo.map(() => getRandomPastelColor());
    
        const pieDataTipo = {
            labels: tipo, // Usar los nombres de los tipos como etiquetas
            datasets: [{
                label: '1',
                data:  cantidad,
                backgroundColor: backgroundColorsTipo,
                hoverOffset: 4
            }]
        };
    
        let pieChartTipo = new Chart(pieCt, {
            type: 'doughnut',
            data: pieDataTipo,
            options: {
                responsive: false,
                plugins: {
                    datalabels: {
                        formatter: (value, ctx) => {
                            const total = ctx.chart.data.datasets[0].data.reduce((acc, curr) => acc + curr, 0);
                            const percentage = ((value / total) * 100).toFixed(2) + '%';
                            return percentage;
                        },
                        color: '#fff',
                        font: {
                            weight: 'bold'
                        }
                    }
                },
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Gráfica de Pay Tipo'
                }
            }
        });
    </script>
</body>
</html>